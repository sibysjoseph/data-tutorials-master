{
  "paragraphs": [
    {
      "text": "%md\n\n# Introduction to Machine Learning using Linear Regression\n\n![spark-ml-lib](https://2xbbhjxc6wk3v21p62t8n4d4-wpengine.netdna-ssl.com/wp-content/uploads/2017/06/spark-mllib-logo.png)",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T23:10:06+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h1>Introduction to Machine Learning using Linear Regression</h1>\n<p><img src=\"https://2xbbhjxc6wk3v21p62t8n4d4-wpengine.netdna-ssl.com/wp-content/uploads/2017/06/spark-mllib-logo.png\" alt=\"spark-ml-lib\" /></p>\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533767856718_-2068452494",
      "id": "20180808-223736_226202175",
      "dateCreated": "2018-08-08T22:37:36+0000",
      "dateStarted": "2018-08-08T23:10:06+0000",
      "dateFinished": "2018-08-08T23:10:06+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "focus": true,
      "$$hashKey": "object:175"
    },
    {
      "text": "%md\n## Introduction\n\nIn this lab we’ll cover basics of building a Linear Regression model using Apache Spark ML Pipeline API.\n\n- Starting from a simple 2 dim array\n- Using Pipeline API to create vectorised version of features and build the model\n- Using Pipeline API to calculate predictions\n- Exchanging data between Scala and Python pandas via TempView (new API in 2.x)\n- Simplified plotting by using pandas plot function (pandas similar as Spark DataFrame)\n- Saving and loading back the model",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:38:22+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>Introduction</h2>\n<p>In this lab we’ll cover basics of building a Linear Regression model using Apache Spark ML Pipeline API.</p>\n<ul>\n<li>Starting from a simple 2 dim array</li>\n<li>Using Pipeline API to create vectorised version of features and build the model</li>\n<li>Using Pipeline API to calculate predictions</li>\n<li>Exchanging data between Scala and Python pandas via TempView (new API in 2.x)</li>\n<li>Simplified plotting by using pandas plot function (pandas similar as Spark DataFrame)</li>\n<li>Saving and loading back the model</li>\n</ul>\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533767896060_41976564",
      "id": "20180808-223816_1197842744",
      "dateCreated": "2018-08-08T22:38:16+0000",
      "dateStarted": "2018-08-08T22:38:22+0000",
      "dateFinished": "2018-08-08T22:38:22+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:176"
    },
    {
      "text": "%md\n## What is a model?\n\nA machine learning model consists of data provided to a machine learning algorithm which includes the correct answer (Target attribute) to the problem that it is trying to solve.The machine learning algorithm is tasked with finding patterns in the data and producing a model which reflect the patterns in the data. For a more specific explanation of the model used here visit the [Hortonworks tutorial](https://hortonworks.com/tutorial/intro-to-machine-learning-with-apache-spark-and-apache-zeppelin/#what-is-a-model).",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:39:15+0000",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "markdown",
          "editOnDblClick": true,
          "completionKey": "TAB",
          "completionSupport": false
        },
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<h2>What is a model?</h2>\n<p>A machine learning model consists of data provided to a machine learning algorithm which includes the correct answer (Target attribute) to the problem that it is trying to solve.The machine learning algorithm is tasked with finding patterns in the data and producing a model which reflect the patterns in the data. For a more specific explanation of the model used here visit the <a href=\"https://hortonworks.com/tutorial/intro-to-machine-learning-with-apache-spark-and-apache-zeppelin/#what-is-a-model\">Hortonworks tutorial</a>.</p>\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533767921709_-1378443404",
      "id": "20180808-223841_433347963",
      "dateCreated": "2018-08-08T22:38:41+0000",
      "dateStarted": "2018-08-08T22:39:15+0000",
      "dateFinished": "2018-08-08T22:39:15+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:177"
    },
    {
      "title": "Verify Spark version (should be 2.x)",
      "text": "%spark2.spark\n\nspark.version",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533766842112_-1070072506",
      "id": "20161023-082330_1254378286",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:178"
    },
    {
      "title": "Create a small data set that we will use for our Linear Regression model",
      "text": "%spark2.spark\n\nimport org.apache.spark.ml.linalg.Vectors\n\nval data = spark.createDataFrame(Seq(\n\t(-12.0,  -4.9),\n\t( -6.0,  -4.5),\n\t( -7.2,  -4.1),\n\t( -5.0,  -3.2),\n\t( -2.0,  -3.0),\n\t( -3.1,  -2.1),\n\t( -4.0,  -1.5),\n\t( -2.2,  -1.2),\n\t( -2.0,  -0.7),\n\t( 1.0,   -0.5),\n\t( -0.7,  -0.2),\n\t( 1.2,   0.1),\n\t( 2.2,   0.3),  \n\t( 6.5,   0.52),\n\t( 4.2,   0.72),\n\t( 8.6,   1.1),\n\t( 9.5,   2.3),\n\t( 14.52, 3.4),\n\t( 12.9,  3.61), \n\t( 16.3,  3.8)\n)).toDF(\"y\", \"x\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533766842112_1312267574",
      "id": "20161023-063018_227184425",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:179"
    },
    {
      "title": "Run Linear Regression",
      "text": "%spark2.spark\n\nimport org.apache.spark.ml.Pipeline\nimport org.apache.spark.ml.feature.VectorAssembler\nimport org.apache.spark.ml.regression.{LinearRegression, LinearRegressionModel}\n\n// Set Features\nval features = (new VectorAssembler()\n    .setInputCols(Array(\"x\"))\n    .setOutputCol(\"features\"))\n\nval linreg = new LinearRegression().setLabelCol(\"y\")\n  \nval pipeline = new Pipeline().setStages(Array(features, linreg))\nval model = pipeline.fit(data)",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533766842112_-2119326025",
      "id": "20161023-063047_142266605",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:180"
    },
    {
      "title": "Summarize model training",
      "text": "%spark2.spark\n\nval linRegModel = model.stages(1).asInstanceOf[LinearRegressionModel]\n\nprintln(s\"RMSE:  ${linRegModel.summary.rootMeanSquaredError}\")\nprintln(s\"r2:    ${linRegModel.summary.r2}\")\nprintln(s\"Model: Y = ${linRegModel.coefficients(0)} * X + ${linRegModel.intercept}\")\n\nlinRegModel.summary.residuals.show()",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533766842113_-1432603085",
      "id": "20161023-065504_1972452148",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:181"
    },
    {
      "title": "Use the same data to predict the model ",
      "text": "%spark2.spark\n\nval result = model.transform(data).select(\"x\", \"y\", \"prediction\")\n\nresult.show()",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533766842113_-1951084583",
      "id": "20161104-232822_1626397932",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:182"
    },
    {
      "title": "Create a Temporary View",
      "text": "%spark2.spark\n\nresult.createOrReplaceTempView(\"linreg\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "title": true,
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533766842113_1943753672",
      "id": "20161104-232946_1293428390",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:183"
    },
    {
      "title": "Save the model",
      "text": "%spark2.spark\n\nlinreg.write.overwrite().save(\"hdfs:///tmp/linregmodel\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "results": [],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533766842113_-457796354",
      "id": "20161019-185407_1496443931",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:184"
    },
    {
      "title": "Load back the model",
      "text": "%spark2.spark\n\nimport org.apache.spark.ml.regression.{LinearRegression, LinearRegressionModel}\n\nval sameModel = LinearRegression.load(\"hdfs:///tmp/linregmodel\")\nval sameLinRegModel = model.stages(1).asInstanceOf[LinearRegressionModel]\n\n// Verify coefficients and intercept\nprintln(s\"Coefficient: ${sameLinRegModel.coefficients} Intercept: ${sameLinRegModel.intercept}\")",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "scala",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/scala",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533766842114_1524202750",
      "id": "20161019-185706_496188641",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:185"
    },
    {
      "text": "%md\n\n#### Visualise the model and training data\n\n**Note**: The following paragraphs require the Python **Pandas** library which is not installed by default. Instead, we've ran the paragraphs for you and disabled **run** so you will avoid any errors. ",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": false,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<h4>Visualise the model and training data</h4>\n<p><strong>Note</strong>: The following paragraphs require the Python <strong>Pandas</strong> library which is not installed by default. Instead, we&rsquo;ve ran the paragraphs for you and disabled <strong>run</strong> so you will avoid any errors.</p>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533766842114_-1816840162",
      "id": "20161104-232912_1326325430",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:186"
    },
    {
      "title": "Convert to Pandas (requires Pandas)",
      "text": "%spark2.pyspark\n\nlinreg = spark.table(\"linreg\").toPandas()\nlinreg",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "tableHide": true,
        "editorSetting": {
          "editOnDblClick": false,
          "language": "python",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "editorHide": false,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": false,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "TEXT",
            "data": "requires Pandas library\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533766842114_1149690025",
      "id": "20161104-233336_1115890215",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:187"
    },
    {
      "title": "Plot the result (requires Pandas)",
      "text": "%spark2.pyspark\nimport StringIO\n\ndef show(p):\n    img = StringIO.StringIO()\n    p.get_figure().savefig(img, format='svg')\n    img.seek(0)\n    print \"%html <div style='width:500px'>\" + img.buf + \"</div>\"\n\nplot = linreg.plot.scatter(x='x', y='y')\n    \nplot.plot(linreg[\"x\"], linreg[\"prediction\"])\nshow(plot)",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:21:00+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": false,
          "language": "python",
          "completionKey": "TAB",
          "completionSupport": true
        },
        "colWidth": 12,
        "editorMode": "ace/mode/python",
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div style='width:500px'><?xml version=\"1.0\" encoding=\"utf-8\" standalone=\"no\"?>\n<!DOCTYPE svg PUBLIC \"-//W3C//DTD SVG 1.1//EN\"\n  \"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\">\n<!-- Created with matplotlib (http://matplotlib.org/) -->\n<svg height=\"432pt\" version=\"1.1\" viewBox=\"0 0 576 432\" width=\"576pt\" xmlns=\"http://www.w3.org/2000/svg\" xmlns:xlink=\"http://www.w3.org/1999/xlink\">\n <defs>\n  <style type=\"text/css\">\n*{stroke-linecap:butt;stroke-linejoin:round;stroke-miterlimit:100000;}\n  </style>\n </defs>\n <g id=\"figure_1\">\n  <g id=\"patch_1\">\n   <path d=\"M 0 432 \nL 576 432 \nL 576 0 \nL 0 0 \nz\n\" style=\"fill:#ffffff;\"/>\n  </g>\n  <g id=\"axes_1\">\n   <g id=\"patch_2\">\n    <path d=\"M 72 388.8 \nL 518.4 388.8 \nL 518.4 43.2 \nL 72 43.2 \nz\n\" style=\"fill:#ffffff;\"/>\n   </g>\n   <g id=\"PathCollection_1\">\n    <defs>\n     <path d=\"M 0 2.236068 \nC 0.593012 2.236068 1.161816 2.000462 1.581139 1.581139 \nC 2.000462 1.161816 2.236068 0.593012 2.236068 0 \nC 2.236068 -0.593012 2.000462 -1.161816 1.581139 -1.581139 \nC 1.161816 -2.000462 0.593012 -2.236068 0 -2.236068 \nC -0.593012 -2.236068 -1.161816 -2.000462 -1.581139 -1.581139 \nC -2.000462 -1.161816 -2.236068 -0.593012 -2.236068 0 \nC -2.236068 0.593012 -2.000462 1.161816 -1.581139 1.581139 \nC -1.161816 2.000462 -0.593012 2.236068 0 2.236068 \nz\n\" id=\"m829ab69b76\" style=\"stroke:#000000;\"/>\n    </defs>\n    <g clip-path=\"url(#p1be21defc0)\">\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"112.92\" xlink:href=\"#m829ab69b76\" y=\"359.177142857\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"127.8\" xlink:href=\"#m829ab69b76\" y=\"299.931428571\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"142.68\" xlink:href=\"#m829ab69b76\" y=\"311.780571429\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"176.16\" xlink:href=\"#m829ab69b76\" y=\"290.057142857\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"183.6\" xlink:href=\"#m829ab69b76\" y=\"260.434285714\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"217.08\" xlink:href=\"#m829ab69b76\" y=\"271.296\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"239.4\" xlink:href=\"#m829ab69b76\" y=\"280.182857143\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"250.56\" xlink:href=\"#m829ab69b76\" y=\"262.409142857\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"269.16\" xlink:href=\"#m829ab69b76\" y=\"260.434285714\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"276.6\" xlink:href=\"#m829ab69b76\" y=\"230.811428571\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"287.76\" xlink:href=\"#m829ab69b76\" y=\"247.597714286\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"298.92\" xlink:href=\"#m829ab69b76\" y=\"228.836571429\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"306.36\" xlink:href=\"#m829ab69b76\" y=\"218.962285714\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"314.544\" xlink:href=\"#m829ab69b76\" y=\"176.502857143\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"321.984\" xlink:href=\"#m829ab69b76\" y=\"199.213714286\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"336.12\" xlink:href=\"#m829ab69b76\" y=\"155.766857143\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"380.76\" xlink:href=\"#m829ab69b76\" y=\"146.88\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"421.68\" xlink:href=\"#m829ab69b76\" y=\"97.3110857143\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"429.492\" xlink:href=\"#m829ab69b76\" y=\"113.307428571\"/>\n     <use style=\"fill:#0000ff;stroke:#000000;\" x=\"436.56\" xlink:href=\"#m829ab69b76\" y=\"79.7348571429\"/>\n    </g>\n   </g>\n   <g id=\"line2d_1\">\n    <path clip-path=\"url(#p1be21defc0)\" d=\"M 112.92 346.363774 \nL 127.8 335.281806 \nL 142.68 324.199837 \nL 176.16 299.265408 \nL 183.6 293.724424 \nL 217.08 268.789995 \nL 239.4 252.167042 \nL 250.56 243.855565 \nL 269.16 230.003105 \nL 276.6 224.462121 \nL 287.76 216.150644 \nL 298.92 207.839168 \nL 306.36 202.298184 \nL 314.544 196.203101 \nL 321.984 190.662117 \nL 336.12 180.134247 \nL 380.76 146.888341 \nL 421.68 116.412928 \nL 429.492 110.594894 \nL 436.56 105.330959 \n\" style=\"fill:none;stroke:#0000ff;stroke-linecap:square;\"/>\n   </g>\n   <g id=\"patch_3\">\n    <path d=\"M 72 43.2 \nL 518.4 43.2 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;\"/>\n   </g>\n   <g id=\"patch_4\">\n    <path d=\"M 518.4 388.8 \nL 518.4 43.2 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;\"/>\n   </g>\n   <g id=\"patch_5\">\n    <path d=\"M 72 388.8 \nL 518.4 388.8 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;\"/>\n   </g>\n   <g id=\"patch_6\">\n    <path d=\"M 72 388.8 \nL 72 43.2 \n\" style=\"fill:none;stroke:#000000;stroke-linecap:square;stroke-linejoin:miter;\"/>\n   </g>\n   <g id=\"matplotlib.axis_1\">\n    <g id=\"xtick_1\">\n     <g id=\"line2d_2\">\n      <defs>\n       <path d=\"M 0 0 \nL 0 -4 \n\" id=\"m4cf68ff897\" style=\"stroke:#000000;stroke-width:0.5;\"/>\n      </defs>\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#m4cf68ff897\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"line2d_3\">\n      <defs>\n       <path d=\"M 0 0 \nL 0 4 \n\" id=\"m57362aa611\" style=\"stroke:#000000;stroke-width:0.5;\"/>\n      </defs>\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#m57362aa611\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"text_1\">\n      <!-- −6 -->\n      <defs>\n       <path d=\"M 10.59375 35.5 \nL 73.1875 35.5 \nL 73.1875 27.203125 \nL 10.59375 27.203125 \nz\n\" id=\"BitstreamVeraSans-Roman-2212\"/>\n       <path d=\"M 33.015625 40.375 \nQ 26.375 40.375 22.484375 35.828125 \nQ 18.609375 31.296875 18.609375 23.390625 \nQ 18.609375 15.53125 22.484375 10.953125 \nQ 26.375 6.390625 33.015625 6.390625 \nQ 39.65625 6.390625 43.53125 10.953125 \nQ 47.40625 15.53125 47.40625 23.390625 \nQ 47.40625 31.296875 43.53125 35.828125 \nQ 39.65625 40.375 33.015625 40.375 \nM 52.59375 71.296875 \nL 52.59375 62.3125 \nQ 48.875 64.0625 45.09375 64.984375 \nQ 41.3125 65.921875 37.59375 65.921875 \nQ 27.828125 65.921875 22.671875 59.328125 \nQ 17.53125 52.734375 16.796875 39.40625 \nQ 19.671875 43.65625 24.015625 45.921875 \nQ 28.375 48.1875 33.59375 48.1875 \nQ 44.578125 48.1875 50.953125 41.515625 \nQ 57.328125 34.859375 57.328125 23.390625 \nQ 57.328125 12.15625 50.6875 5.359375 \nQ 44.046875 -1.421875 33.015625 -1.421875 \nQ 20.359375 -1.421875 13.671875 8.265625 \nQ 6.984375 17.96875 6.984375 36.375 \nQ 6.984375 53.65625 15.1875 63.9375 \nQ 23.390625 74.21875 37.203125 74.21875 \nQ 40.921875 74.21875 44.703125 73.484375 \nQ 48.484375 72.75 52.59375 71.296875 \n\" id=\"BitstreamVeraSans-Roman-36\"/>\n      </defs>\n      <g transform=\"translate(63.1546875 401.918125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-2212\"/>\n       <use x=\"83.7890625\" xlink:href=\"#BitstreamVeraSans-Roman-36\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_2\">\n     <g id=\"line2d_4\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"146.4\" xlink:href=\"#m4cf68ff897\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"line2d_5\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"146.4\" xlink:href=\"#m57362aa611\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"text_2\">\n      <!-- −4 -->\n      <defs>\n       <path d=\"M 37.796875 64.3125 \nL 12.890625 25.390625 \nL 37.796875 25.390625 \nz\nM 35.203125 72.90625 \nL 47.609375 72.90625 \nL 47.609375 25.390625 \nL 58.015625 25.390625 \nL 58.015625 17.1875 \nL 47.609375 17.1875 \nL 47.609375 0 \nL 37.796875 0 \nL 37.796875 17.1875 \nL 4.890625 17.1875 \nL 4.890625 26.703125 \nz\n\" id=\"BitstreamVeraSans-Roman-34\"/>\n      </defs>\n      <g transform=\"translate(137.5546875 401.918125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-2212\"/>\n       <use x=\"83.7890625\" xlink:href=\"#BitstreamVeraSans-Roman-34\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_3\">\n     <g id=\"line2d_6\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"220.8\" xlink:href=\"#m4cf68ff897\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"line2d_7\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"220.8\" xlink:href=\"#m57362aa611\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"text_3\">\n      <!-- −2 -->\n      <defs>\n       <path d=\"M 19.1875 8.296875 \nL 53.609375 8.296875 \nL 53.609375 0 \nL 7.328125 0 \nL 7.328125 8.296875 \nQ 12.9375 14.109375 22.625 23.890625 \nQ 32.328125 33.6875 34.8125 36.53125 \nQ 39.546875 41.84375 41.421875 45.53125 \nQ 43.3125 49.21875 43.3125 52.78125 \nQ 43.3125 58.59375 39.234375 62.25 \nQ 35.15625 65.921875 28.609375 65.921875 \nQ 23.96875 65.921875 18.8125 64.3125 \nQ 13.671875 62.703125 7.8125 59.421875 \nL 7.8125 69.390625 \nQ 13.765625 71.78125 18.9375 73 \nQ 24.125 74.21875 28.421875 74.21875 \nQ 39.75 74.21875 46.484375 68.546875 \nQ 53.21875 62.890625 53.21875 53.421875 \nQ 53.21875 48.921875 51.53125 44.890625 \nQ 49.859375 40.875 45.40625 35.40625 \nQ 44.1875 33.984375 37.640625 27.21875 \nQ 31.109375 20.453125 19.1875 8.296875 \n\" id=\"BitstreamVeraSans-Roman-32\"/>\n      </defs>\n      <g transform=\"translate(211.9546875 401.918125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-2212\"/>\n       <use x=\"83.7890625\" xlink:href=\"#BitstreamVeraSans-Roman-32\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_4\">\n     <g id=\"line2d_8\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"295.2\" xlink:href=\"#m4cf68ff897\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"line2d_9\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"295.2\" xlink:href=\"#m57362aa611\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"text_4\">\n      <!-- 0 -->\n      <defs>\n       <path d=\"M 31.78125 66.40625 \nQ 24.171875 66.40625 20.328125 58.90625 \nQ 16.5 51.421875 16.5 36.375 \nQ 16.5 21.390625 20.328125 13.890625 \nQ 24.171875 6.390625 31.78125 6.390625 \nQ 39.453125 6.390625 43.28125 13.890625 \nQ 47.125 21.390625 47.125 36.375 \nQ 47.125 51.421875 43.28125 58.90625 \nQ 39.453125 66.40625 31.78125 66.40625 \nM 31.78125 74.21875 \nQ 44.046875 74.21875 50.515625 64.515625 \nQ 56.984375 54.828125 56.984375 36.375 \nQ 56.984375 17.96875 50.515625 8.265625 \nQ 44.046875 -1.421875 31.78125 -1.421875 \nQ 19.53125 -1.421875 13.0625 8.265625 \nQ 6.59375 17.96875 6.59375 36.375 \nQ 6.59375 54.828125 13.0625 64.515625 \nQ 19.53125 74.21875 31.78125 74.21875 \n\" id=\"BitstreamVeraSans-Roman-30\"/>\n      </defs>\n      <g transform=\"translate(291.3825 401.918125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-30\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_5\">\n     <g id=\"line2d_10\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"369.6\" xlink:href=\"#m4cf68ff897\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"line2d_11\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"369.6\" xlink:href=\"#m57362aa611\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"text_5\">\n      <!-- 2 -->\n      <g transform=\"translate(365.7825 401.918125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-32\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_6\">\n     <g id=\"line2d_12\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"444.0\" xlink:href=\"#m4cf68ff897\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"line2d_13\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"444.0\" xlink:href=\"#m57362aa611\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"text_6\">\n      <!-- 4 -->\n      <g transform=\"translate(440.1825 401.918125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-34\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"xtick_7\">\n     <g id=\"line2d_14\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#m4cf68ff897\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"line2d_15\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#m57362aa611\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"text_7\">\n      <!-- 6 -->\n      <g transform=\"translate(514.5825 401.918125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-36\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"text_8\">\n     <!-- x -->\n     <defs>\n      <path d=\"M 54.890625 54.6875 \nL 35.109375 28.078125 \nL 55.90625 0 \nL 45.3125 0 \nL 29.390625 21.484375 \nL 13.484375 0 \nL 2.875 0 \nL 24.125 28.609375 \nL 4.6875 54.6875 \nL 15.28125 54.6875 \nL 29.78125 35.203125 \nL 44.28125 54.6875 \nz\n\" id=\"BitstreamVeraSans-Roman-78\"/>\n     </defs>\n     <g transform=\"translate(291.64875 418.531875)scale(0.12 -0.12)\">\n      <use xlink:href=\"#BitstreamVeraSans-Roman-78\"/>\n     </g>\n    </g>\n   </g>\n   <g id=\"matplotlib.axis_2\">\n    <g id=\"ytick_1\">\n     <g id=\"line2d_16\">\n      <defs>\n       <path d=\"M 0 0 \nL 4 0 \n\" id=\"me381699738\" style=\"stroke:#000000;stroke-width:0.5;\"/>\n      </defs>\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#me381699738\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"line2d_17\">\n      <defs>\n       <path d=\"M 0 0 \nL -4 0 \n\" id=\"mf30cee38a2\" style=\"stroke:#000000;stroke-width:0.5;\"/>\n      </defs>\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#mf30cee38a2\" y=\"388.8\"/>\n      </g>\n     </g>\n     <g id=\"text_9\">\n      <!-- −15 -->\n      <defs>\n       <path d=\"M 12.40625 8.296875 \nL 28.515625 8.296875 \nL 28.515625 63.921875 \nL 10.984375 60.40625 \nL 10.984375 69.390625 \nL 28.421875 72.90625 \nL 38.28125 72.90625 \nL 38.28125 8.296875 \nL 54.390625 8.296875 \nL 54.390625 0 \nL 12.40625 0 \nz\n\" id=\"BitstreamVeraSans-Roman-31\"/>\n       <path d=\"M 10.796875 72.90625 \nL 49.515625 72.90625 \nL 49.515625 64.59375 \nL 19.828125 64.59375 \nL 19.828125 46.734375 \nQ 21.96875 47.46875 24.109375 47.828125 \nQ 26.265625 48.1875 28.421875 48.1875 \nQ 40.625 48.1875 47.75 41.5 \nQ 54.890625 34.8125 54.890625 23.390625 \nQ 54.890625 11.625 47.5625 5.09375 \nQ 40.234375 -1.421875 26.90625 -1.421875 \nQ 22.3125 -1.421875 17.546875 -0.640625 \nQ 12.796875 0.140625 7.71875 1.703125 \nL 7.71875 11.625 \nQ 12.109375 9.234375 16.796875 8.0625 \nQ 21.484375 6.890625 26.703125 6.890625 \nQ 35.15625 6.890625 40.078125 11.328125 \nQ 45.015625 15.765625 45.015625 23.390625 \nQ 45.015625 31 40.078125 35.4375 \nQ 35.15625 39.890625 26.703125 39.890625 \nQ 22.75 39.890625 18.8125 39.015625 \nQ 14.890625 38.140625 10.796875 36.28125 \nz\n\" id=\"BitstreamVeraSans-Roman-35\"/>\n      </defs>\n      <g transform=\"translate(42.674375 392.11125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-2212\"/>\n       <use x=\"83.7890625\" xlink:href=\"#BitstreamVeraSans-Roman-31\"/>\n       <use x=\"147.412109375\" xlink:href=\"#BitstreamVeraSans-Roman-35\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_2\">\n     <g id=\"line2d_18\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#me381699738\" y=\"339.428571429\"/>\n      </g>\n     </g>\n     <g id=\"line2d_19\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#mf30cee38a2\" y=\"339.428571429\"/>\n      </g>\n     </g>\n     <g id=\"text_10\">\n      <!-- −10 -->\n      <g transform=\"translate(42.674375 342.739821429)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-2212\"/>\n       <use x=\"83.7890625\" xlink:href=\"#BitstreamVeraSans-Roman-31\"/>\n       <use x=\"147.412109375\" xlink:href=\"#BitstreamVeraSans-Roman-30\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_3\">\n     <g id=\"line2d_20\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#me381699738\" y=\"290.057142857\"/>\n      </g>\n     </g>\n     <g id=\"line2d_21\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#mf30cee38a2\" y=\"290.057142857\"/>\n      </g>\n     </g>\n     <g id=\"text_11\">\n      <!-- −5 -->\n      <g transform=\"translate(50.309375 293.368392857)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-2212\"/>\n       <use x=\"83.7890625\" xlink:href=\"#BitstreamVeraSans-Roman-35\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_4\">\n     <g id=\"line2d_22\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#me381699738\" y=\"240.685714286\"/>\n      </g>\n     </g>\n     <g id=\"line2d_23\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#mf30cee38a2\" y=\"240.685714286\"/>\n      </g>\n     </g>\n     <g id=\"text_12\">\n      <!-- 0 -->\n      <g transform=\"translate(60.365 243.996964286)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-30\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_5\">\n     <g id=\"line2d_24\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#me381699738\" y=\"191.314285714\"/>\n      </g>\n     </g>\n     <g id=\"line2d_25\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#mf30cee38a2\" y=\"191.314285714\"/>\n      </g>\n     </g>\n     <g id=\"text_13\">\n      <!-- 5 -->\n      <g transform=\"translate(60.365 194.625535714)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-35\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_6\">\n     <g id=\"line2d_26\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#me381699738\" y=\"141.942857143\"/>\n      </g>\n     </g>\n     <g id=\"line2d_27\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#mf30cee38a2\" y=\"141.942857143\"/>\n      </g>\n     </g>\n     <g id=\"text_14\">\n      <!-- 10 -->\n      <g transform=\"translate(52.73 145.254107143)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-31\"/>\n       <use x=\"63.623046875\" xlink:href=\"#BitstreamVeraSans-Roman-30\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_7\">\n     <g id=\"line2d_28\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#me381699738\" y=\"92.5714285714\"/>\n      </g>\n     </g>\n     <g id=\"line2d_29\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#mf30cee38a2\" y=\"92.5714285714\"/>\n      </g>\n     </g>\n     <g id=\"text_15\">\n      <!-- 15 -->\n      <g transform=\"translate(52.73 95.8826785714)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-31\"/>\n       <use x=\"63.623046875\" xlink:href=\"#BitstreamVeraSans-Roman-35\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"ytick_8\">\n     <g id=\"line2d_30\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"72.0\" xlink:href=\"#me381699738\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"line2d_31\">\n      <g>\n       <use style=\"stroke:#000000;stroke-width:0.5;\" x=\"518.4\" xlink:href=\"#mf30cee38a2\" y=\"43.2\"/>\n      </g>\n     </g>\n     <g id=\"text_16\">\n      <!-- 20 -->\n      <g transform=\"translate(52.73 46.51125)scale(0.12 -0.12)\">\n       <use xlink:href=\"#BitstreamVeraSans-Roman-32\"/>\n       <use x=\"63.623046875\" xlink:href=\"#BitstreamVeraSans-Roman-30\"/>\n      </g>\n     </g>\n    </g>\n    <g id=\"text_17\">\n     <!-- y -->\n     <defs>\n      <path d=\"M 32.171875 -5.078125 \nQ 28.375 -14.84375 24.75 -17.8125 \nQ 21.140625 -20.796875 15.09375 -20.796875 \nL 7.90625 -20.796875 \nL 7.90625 -13.28125 \nL 13.1875 -13.28125 \nQ 16.890625 -13.28125 18.9375 -11.515625 \nQ 21 -9.765625 23.484375 -3.21875 \nL 25.09375 0.875 \nL 2.984375 54.6875 \nL 12.5 54.6875 \nL 29.59375 11.921875 \nL 46.6875 54.6875 \nL 56.203125 54.6875 \nz\n\" id=\"BitstreamVeraSans-Roman-79\"/>\n     </defs>\n     <g transform=\"translate(35.17875 219.55125)rotate(-90.0)scale(0.12 -0.12)\">\n      <use xlink:href=\"#BitstreamVeraSans-Roman-79\"/>\n     </g>\n    </g>\n   </g>\n  </g>\n </g>\n <defs>\n  <clipPath id=\"p1be21defc0\">\n   <rect height=\"345.6\" width=\"446.4\" x=\"72.0\" y=\"43.2\"/>\n  </clipPath>\n </defs>\n</svg>\n</div>\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533766842115_1890673584",
      "id": "20161104-233454_1462963013",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:188"
    },
    {
      "title": "More ML Algorithms",
      "text": "%md\n\nIn this lab we have looked at Linear Regression, but there are other popular algorithms. In the following labs we'll begin exploring:\n\n- [Decision trees](https://spark.apache.org/docs/latest/ml-classification-regression.html#decision-trees)\n- [Random forest](https://spark.apache.org/docs/latest/ml-classification-regression.html#random-forests)\n- [K-Means Clustering](https://spark.apache.org/docs/latest/ml-clustering.html#k-means)",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:20:42+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "colWidth": 12,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<div class=\"markdown-body\">\n<p>In this lab we have looked at Linear Regression, but there are other popular algorithms. In the following labs we&rsquo;ll begin exploring:</p>\n<ul>\n  <li><a href=\"https://spark.apache.org/docs/latest/ml-classification-regression.html#decision-trees\">Decision trees</a></li>\n  <li><a href=\"https://spark.apache.org/docs/latest/ml-classification-regression.html#random-forests\">Random forest</a></li>\n  <li><a href=\"https://spark.apache.org/docs/latest/ml-clustering.html#k-means\">K-Means Clustering</a></li>\n</ul>\n</div>"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533766842115_1326827739",
      "id": "20161021-181337_384523728",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "status": "READY",
      "errorMessage": "",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:189"
    },
    {
      "title": "Additional Resources",
      "text": "%md\n\nWe hope you've enjoyed this introductory lab. Below are additional resources that you should find useful:\n\n1. [Hortonworks Apache Spark Tutorials](https://hortonworks.com/tutorials/?filters=apache-spark#tuts-developers) \n2. [Hortonworks Community Connection (HCC)](https://community.hortonworks.com/spaces/85/data-science.html?type=question) is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.\n3. [Hortonworks Apache Spark Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.5/bk_spark-component-guide/content/ch_developing-spark-apps.html) - official Spark documentation.\n4. [Hortonworks Apache Zeppelin Docs](http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.5/bk_zeppelin-component-guide/content/ch_using_zeppelin.html) - official Zeppelin documentation.",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:43:31+0000",
      "config": {
        "tableHide": false,
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown"
        },
        "colWidth": 10,
        "editorMode": "ace/mode/markdown",
        "editorHide": true,
        "title": true,
        "results": [
          {
            "graph": {
              "mode": "table",
              "height": 300,
              "optionOpen": false,
              "keys": [],
              "values": [],
              "groups": [],
              "scatter": {}
            }
          }
        ],
        "enabled": true,
        "fontSize": 9
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p>We hope you've enjoyed this introductory lab. Below are additional resources that you should find useful:</p>\n<ol>\n<li><a href=\"https://hortonworks.com/tutorials/?filters=apache-spark#tuts-developers\">Hortonworks Apache Spark Tutorials</a></li>\n<li><a href=\"https://community.hortonworks.com/spaces/85/data-science.html?type=question\">Hortonworks Community Connection (HCC)</a> is a great resource for questions and answers on Spark, Data Analytics/Science, and many more Big Data topics.</li>\n<li><a href=\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.5/bk_spark-component-guide/content/ch_developing-spark-apps.html\">Hortonworks Apache Spark Docs</a> - official Spark documentation.</li>\n<li><a href=\"http://docs.hortonworks.com/HDPDocuments/HDP2/HDP-2.6.5/bk_zeppelin-component-guide/content/ch_using_zeppelin.html\">Hortonworks Apache Zeppelin Docs</a> - official Zeppelin documentation.</li>\n</ol>\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533766842116_220682357",
      "id": "20161021-162613_1357875353",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "dateStarted": "2018-08-08T22:43:31+0000",
      "dateFinished": "2018-08-08T22:43:31+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:190"
    },
    {
      "text": "%md\n[![HCC Community Logo](https://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png)](https://community.hortonworks.com/)",
      "user": "anonymous",
      "dateUpdated": "2018-08-08T22:45:07+0000",
      "config": {
        "editorSetting": {
          "editOnDblClick": true,
          "language": "markdown",
          "completionKey": "TAB",
          "completionSupport": false
        },
        "colWidth": 2,
        "editorMode": "ace/mode/markdown",
        "results": {},
        "graph": {
          "mode": "table",
          "height": 300,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "fontSize": 9,
        "editorHide": true,
        "tableHide": false
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "results": {
        "code": "SUCCESS",
        "msg": [
          {
            "type": "HTML",
            "data": "<p><a href=\"https://community.hortonworks.com/\"><img src=\"https://hortonworks.com/wp-content/uploads/2016/03/logo-hcc.png\" alt=\"HCC Community Logo\" /></a></p>\n"
          }
        ]
      },
      "apps": [],
      "jobName": "paragraph_1533766842116_-1480761989",
      "id": "20161021-182620_1556029654",
      "dateCreated": "2018-08-08T22:20:42+0000",
      "dateStarted": "2018-08-08T22:45:07+0000",
      "dateFinished": "2018-08-08T22:45:07+0000",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:191"
    },
    {
      "user": "anonymous",
      "config": {
        "colWidth": 12,
        "fontSize": 9,
        "enabled": true,
        "results": {},
        "editorSetting": {
          "language": "scala",
          "editOnDblClick": false,
          "completionKey": "TAB",
          "completionSupport": true
        },
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "apps": [],
      "jobName": "paragraph_1533768293508_848880008",
      "id": "20180808-224453_1028333342",
      "dateCreated": "2018-08-08T22:44:53+0000",
      "status": "READY",
      "progressUpdateIntervalMs": 500,
      "$$hashKey": "object:192"
    }
  ],
  "name": "Introduction to Machine Learning with Apache Spark",
  "id": "2DMC7WDGN",
  "noteParams": {},
  "noteForms": {},
  "angularObjects": {
    "md:shared_process": [],
    "angular:shared_process": [],
    "sh:shared_process": [],
    "spark2:shared_process": []
  },
  "config": {
    "isZeppelinNotebookCronEnable": false,
    "looknfeel": "default",
    "personalizedMode": "false"
  },
  "info": {}
}
